{"version":3,"file":"extension.js","mappings":"kCAAAA,EAAOC,QAAUC,QAAQ,S,UCAzBF,EAAOC,QAAUC,QAAQ,K,SCAzBF,EAAOC,QAAUC,QAAQ,O,GCCrBC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaL,QAGrB,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,CAAC,GAOX,OAHAO,EAAoBH,GAAUL,EAAQA,EAAOC,QAASG,GAG/CJ,EAAOC,OACf,C,uGCtBA,eACA,SACA,QAuBA,oBAAyBQ,GACvB,MAAMC,EAAaC,EAAOC,SAASC,gBAAgB,6CAA6C,KAC9F,MAAMC,EAAaH,EAAOI,UAAUC,SAE/BF,GAzBT,SAA+BA,GAC7B,MAAMG,EAAeC,EAAKC,KAAKC,UAAW,KAAM,aAG1CC,EAAuBH,EAAKC,KAAKF,EAAc,iBAI/CK,EAHmBC,EAAGC,aAAaH,EAAsB,QAI5DI,QAAQ,oBAAqB,gBAC7BA,QAAQ,cAAe,SACvBA,QAAQ,kBAAmB,4BAGxBC,EAAqBR,EAAKC,KAAKL,EAAY,iBACjDS,EAAGI,cAAcD,EAAoBJ,EAAmB,OAI1D,CAYIM,CAAsBd,GAGtBH,EAAOkB,OAAOC,uBAAuB,4DARnCnB,EAAOkB,OAAOE,iBAAiB,+CAQ8D,IAIjGtB,EAAQuB,cAAcC,KAAKvB,EAC7B,EAEA,wBAA8B,C","sources":["webpack://chrome-extension-starter-kit/external commonjs \"vscode\"","webpack://chrome-extension-starter-kit/external node-commonjs \"fs\"","webpack://chrome-extension-starter-kit/external node-commonjs \"path\"","webpack://chrome-extension-starter-kit/webpack/bootstrap","webpack://chrome-extension-starter-kit/./src/extension.ts"],"sourcesContent":["module.exports = require(\"vscode\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import * as vscode from 'vscode';\nimport * as fs from 'fs';\nimport * as path from 'path';\n\nfunction generateTemplateFiles(outputPath: string) {\n  const templatePath = path.join(__dirname, '..', 'templates');\n\n  // Read the template manifest file\n  const templateManifestPath = path.join(templatePath, 'manifest.json');\n  const templateManifest = fs.readFileSync(templateManifestPath, 'utf8');\n\n  // Replace any placeholders or variables in the template manifest\n  const generatedManifest = templateManifest\n    .replace('{{extensionName}}', 'My Extension')\n    .replace('{{version}}', '1.0.0')\n    .replace('{{description}}', 'My extension description');\n\n  // Write the generated manifest file to the output directory\n  const outputManifestPath = path.join(outputPath, 'manifest.json');\n  fs.writeFileSync(outputManifestPath, generatedManifest, 'utf8');\n\n  // Copy other template files if needed\n  // fs.copyFileSync(srcPath, destPath);\n}\n\nexport function activate(context: vscode.ExtensionContext) {\n  const disposable = vscode.commands.registerCommand('extension.generateChromeExtensionTemplate', () => {\n    const outputPath = vscode.workspace.rootPath;\n\n    if (!outputPath) {\n      vscode.window.showErrorMessage('Unable to determine the workspace root path.');\n      return;\n    }\n\n    // Generate template files\n    generateTemplateFiles(outputPath);\n\n    // Show a notification\n    vscode.window.showInformationMessage('Chrome Extension template files generated successfully!');\n\t\n  });\n\n  context.subscriptions.push(disposable);\n}\n\nexport function deactivate() {}\n"],"names":["module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","context","disposable","vscode","commands","registerCommand","outputPath","workspace","rootPath","templatePath","path","join","__dirname","templateManifestPath","generatedManifest","fs","readFileSync","replace","outputManifestPath","writeFileSync","generateTemplateFiles","window","showInformationMessage","showErrorMessage","subscriptions","push"],"sourceRoot":""}
